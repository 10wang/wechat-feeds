<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>编程往事 | wechat-feeds</title><link>http://MjM5NDIyMjI3OQ.favicon.privacyhide.com/favicon.ico</link><description>专注互联网后端技术分享、行业观察以及个人成长！</description><managingEditor> (hellodword)</managingEditor><pubDate>Mon, 08 Feb 2021 23:55:03 +0800</pubDate><image><url>http://MjM5NDIyMjI3OQ.favicon.privacyhide.com/favicon.ico</url><title>编程往事 | wechat-feeds</title><link>http://MjM5NDIyMjI3OQ.favicon.privacyhide.com/favicon.ico</link><width>64</width><height>64</height></image><item><title>bthread源码剖析（四）: 通过ParkingLot实现Worker间任务状态同步</title><link>https://mp.weixin.qq.com/s/V4ageZsK1yn6Be_AAhQRSg</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic5UtuBKfICY3RmkpXb4iaxwReZwaWy26pPsymmgrkyBwvU5N0NqJ2bbtfAbOght42mUAvG8USPxuuA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>我们知道TaskGroup是在死循环等待任务，然后切换栈去执行任务。在没有任务的时候TG会“休眠”，当任务出现的时候被唤醒然后消费。这个思路和线程中的条件变量类似。而bthread实现worker间的状态同步是通过“ParkingLot”。]]></content:encoded><pubDate>Mon, 08 Feb 2021 23:44:09 +0800</pubDate></item><item><title>bthread源码剖析（三）: 汇编语言实现的上下文切换</title><link>https://mp.weixin.qq.com/s/Auk3SgREtZTBpUb0R10YuQ</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic7Cr6kfG2kyvB1fDXcdO7ibrUGm24jkXTvfq4k1c37fsOpgFicibug3ae3GKzSn5vNfV2IMs15OuiceAA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>上回书说道，TaskGroup的run_main_task()有三大关键函数，剩余一个sched_to()没有展开详谈。那​在今天的源码探秘之旅开始之前呢，首先高能预警，本文会涉及到汇编语言，所以请大家坐稳扶好！]]></content:encoded><pubDate>Thu, 04 Feb 2021 23:11:27 +0800</pubDate></item><item><title>bthread源码剖析（二）: 工作窃取与TaskGroup的run_main_task()</title><link>https://mp.weixin.qq.com/s/mN9DM65B4FJW3e7-c9O3NA</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic4aj7Xl20SgkA4oufwk8nbtemibiaQc8RJcz0WiahNAMVuib0WCHkV83W6DReKQBkCIsZ9j4Fqa1lhXLA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>上一篇文章，介绍了TaskControl的初始化逻辑、worker的基本概念，并引出了TaskGroup的主要函数：run_main_task()。今天我们就来谈一谈run_main_task()和“工作窃取”！]]></content:encoded><pubDate>Tue, 02 Feb 2021 22:50:07 +0800</pubDate></item><item><title>bthread源码剖析（一）: 基本概念与TaskControl初始化</title><link>https://mp.weixin.qq.com/s/PqLRz01JudI88M7zwau7sQ</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic5oBDBpHRNibcHSEIYHHAicSeQZKRyV2cIOD7UXb9ibl7qwgRFOkkXtD7VrfoliccfUYnRI5bSfRWL3IQ/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>bthread是协程吗？如果你使用过brpc，那么对bthread应该并不陌生。毫不夸张地说，brpc的精华]]></content:encoded><pubDate>Mon, 01 Feb 2021 23:04:42 +0800</pubDate></item><item><title>过往工作中的一些趣事</title><link>https://mp.weixin.qq.com/s/EbJINtreChH1ku_kJW5Tyg</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic58Md7cug8xhTIL8zo59weicwtpqDDUIPEuG5TGzYyC7hZY002LdfwPPEy4vBPXyIWS4fC2ziaWEGEA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>分享两则之前在腾讯和百度工作时的一些趣事。和工作相关也无关，会谈及一些技术。其中百度篇比较长，但层次递进，也更值得一读]]></content:encoded><pubDate>Sun, 13 Dec 2020 22:20:47 +0800</pubDate></item><item><title>通过echo_server带你入门brpc！</title><link>https://mp.weixin.qq.com/s/nmLruEd_nUkC7Dj5EHyWLw</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic67CNOLB1lJtNKr4TpY1HkmF9iaia232a3htObpL36UOyhmmOAKJ0KpV8v0Gp1stDtUO0mgicrHFib0Yw/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>前文我们介绍过如何编译安装brpc（参见：brpc最新安装上手指南），今天通过echo_server来介绍一下brpc的基本使用方法与细节。]]></content:encoded><pubDate>Wed, 02 Dec 2020 00:50:22 +0800</pubDate></item><item><title>Web Services：重整山河待后生</title><link>https://mp.weixin.qq.com/s/31EUikmkvZTRRB1ATg9t0Q</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic4cIH2HZv5vicqhEnsAfW6XNBSVqfYaWlJLZ0OXefjU2DTGwR26q6Vl1uY4JCXuCKUhJdf339fD4HQ/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>长江后浪推前浪，前浪死在沙滩上。前面介绍CGI的文章，其实很多人从未用过甚至听过CGI。今天介绍的Web Service曾经也是后浪，带着一统接入层网关协议、一统RPC江湖的双重期望出世，然而时至今日却几乎无人谈起，实在令人唏嘘。]]></content:encoded><pubDate>Sun, 29 Nov 2020 18:15:48 +0800</pubDate></item><item><title>叫板面试官：请不要再问我海量数据题！</title><link>https://mp.weixin.qq.com/s/TFQPdDDVlUA35BQHS3JjeQ</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic53QYAPpJm2hagDPMlAg5jicWJMyibsDGsE76f7g6Phpru2RvXKoAJRVUZbcwaRiaBCQuB0CKEhG9B9Q/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>面试官 老鸟：你以为这题这么容易？
应聘者 小鹅：你以为这题很难？]]></content:encoded><pubDate>Mon, 23 Nov 2020 23:50:46 +0800</pubDate></item><item><title>文章专题推荐，建议收藏</title><link>https://mp.weixin.qq.com/s/e_qOpp3reO-V7iahjoS2AQ</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic4RcJeNhegiaKoaYJ0LRlavEau7icSUW12uD6k48KVATwEXONLn6UibXtGX2h2hmqf3gt4ALcqRN21OA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>文章专题推荐！]]></content:encoded><pubDate>Sun, 22 Nov 2020 21:35:40 +0800</pubDate></item><item><title>实践解读CLOSE_WAIT和TIME_WAIT</title><link>https://mp.weixin.qq.com/s/Pf-HwSl7bqvPMc6goX5Y5g</link><description></description><content:encoded><![CDATA[<img src="http://mmbiz.qpic.cn/mmbiz_jpg/hQZ4NEZ2sic5RtTSiaaX75UTXYBBcia1S9bOIXHnqXX3UicyRxK85kTpIzK05ibeZlNf6yErqNeJRyo45Z3ibdEZVVnQ/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>CLOSE_WAIT和TIME_WAIT是如何产生的？大量的CLOSE_WAIT和TIME_WAIT又有何隐患？本文将通过实践角度来带你揭开CLOSE_WAIT和TIME_WAIT的神秘面纱！]]></content:encoded><pubDate>Sat, 21 Nov 2020 22:19:38 +0800</pubDate></item></channel></rss>