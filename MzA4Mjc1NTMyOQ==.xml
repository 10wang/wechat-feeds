<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Golang语言开发栈 | wechat-feeds</title><link>http://MzA4Mjc1NTMyOQ.favicon.privacyhide.com/favicon.ico</link><description>学习Go语言，和我一起吧。致力于go编程技术教程分享。专注于go面试题，go标准库，go三方库，go框架，go orm，分布式，RPC应用，设计模式，数据结构与算法，数据中台。</description><managingEditor> (hellodword)</managingEditor><pubDate>Thu, 15 Apr 2021 23:22:39 +0800</pubDate><image><url>http://MzA4Mjc1NTMyOQ.favicon.privacyhide.com/favicon.ico</url><title>Golang语言开发栈 | wechat-feeds</title><link>http://MzA4Mjc1NTMyOQ.favicon.privacyhide.com/favicon.ico</link><width>64</width><height>64</height></image><item><title>Golang 语言中基础同步原语 Mutex 和 RWMutex 的区别</title><link>https://mp.weixin.qq.com/s/nU-WFszIP1Sk1rC4q5cI1A</link><description></description><content:encoded><![CDATA[Golang 语言中基础同步原语 Mutex 和 RWMutex 的区别]]></content:encoded><pubDate>Thu, 15 Apr 2021 11:15:17 +0800</pubDate></item><item><title>Golang 语言中的内置函数 make 和 new</title><link>https://mp.weixin.qq.com/s/cGWZN_2uKRyDaI75VoGEfw</link><description></description><content:encoded><![CDATA[Golang 语言中的内置函数 make 和 new]]></content:encoded><pubDate>Sun, 11 Apr 2021 16:00:05 +0800</pubDate></item><item><title>Golang 语言怎么高效使用字符串？</title><link>https://mp.weixin.qq.com/s/Na5hQiuggifsHOEnw-2oXA</link><description></description><content:encoded><![CDATA[Golang 语言怎么高效使用字符串？]]></content:encoded><pubDate>Tue, 06 Apr 2021 18:34:58 +0800</pubDate></item><item><title>Golang 语言中数组和切片的区别是什么？</title><link>https://mp.weixin.qq.com/s/WuC4jlJv_t5QaniWNXn8uQ</link><description></description><content:encoded><![CDATA[Golang 语言中数组和切片的区别是什么？]]></content:encoded><pubDate>Sat, 03 Apr 2021 22:01:12 +0800</pubDate></item><item><title>Golang 语言的编程技巧之类型</title><link>https://mp.weixin.qq.com/s/NwJY4-QULFT8Cd5R2un6cw</link><description></description><content:encoded><![CDATA[Golang 语言的编程技巧之类型]]></content:encoded><pubDate>Wed, 31 Mar 2021 16:13:07 +0800</pubDate></item><item><title>Golang 语言的编程技巧之变量</title><link>https://mp.weixin.qq.com/s/vlWkkyfcg-X5OHzf05gjTg</link><description></description><content:encoded><![CDATA[Golang 语言的编程技巧之变量]]></content:encoded><pubDate>Tue, 30 Mar 2021 11:35:30 +0800</pubDate></item><item><title>Golang 语言中的非类型安全指针</title><link>https://mp.weixin.qq.com/s/MvULt7x0m4IBmz1bNzLvCQ</link><description></description><content:encoded><![CDATA[Golang 语言中的非类型安全指针]]></content:encoded><pubDate>Sun, 28 Mar 2021 09:35:21 +0800</pubDate></item><item><title>Golang 语言中的指针介绍</title><link>https://mp.weixin.qq.com/s/-Z11P_qCrOJqXNXZ6hIXyg</link><description></description><content:encoded><![CDATA[Golang 语言中的指针介绍]]></content:encoded><pubDate>Wed, 24 Mar 2021 22:51:00 +0800</pubDate></item><item><title>Golang 语言临时对象池 - sync.Pool</title><link>https://mp.weixin.qq.com/s/QH_IW-hUfxs2MxkLEBiexA</link><description></description><content:encoded><![CDATA[Golang 语言临时对象池 - sync.Pool]]></content:encoded><pubDate>Sun, 21 Mar 2021 22:22:39 +0800</pubDate></item><item><title>Golang 语言中 map 的键值类型选择，它是并发安全的吗？</title><link>https://mp.weixin.qq.com/s/vV2VMGguLgMik-FjIlDWKA</link><description></description><content:encoded><![CDATA[Golang 语言中 map 的键值类型选择，它是并发安全的吗？]]></content:encoded><pubDate>Sun, 14 Mar 2021 12:42:25 +0800</pubDate></item></channel></rss>